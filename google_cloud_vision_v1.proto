// Author : Tegan Burns-Berger 




// --- REFRENCE ---  //
//ImageAnnotator (interface)
//AnnotateImageRequest (message)
//AnnotateImageResponse (message)
//BatchAnnotateImagesRequest (message)
//BatchAnnotateImagesResponse (message)
//BoundingPoly (message)
//ColorInfo (message)
//DominantColorsAnnotation (message)
//EntityAnnotation (message)
//FaceAnnotation (message)
//FaceAnnotation.Landmark (message)
//FaceAnnotation.Landmark.Type (enum)
//Feature (message)
//Feature.Type (enum)
//Image (message)
//ImageContext (message)
//ImageProperties (message)
//ImageSource (message)
//LatLongRect (message)
//Likelihood (enum)
//LocationInfo (message)
//Position (message)
//Property (message)
//SafeSearchAnnotation (message)
//Vertex (message)


syntax = "proto3";

package google_cloud_vision_v1;

//import "google_rpc.proto";
import "google_type.proto";


service ImageAnnotator {

    rpc BatchAnnotateImages(BatchAnnotateImagesRequest) returns (BatchAnnotateImagesResponse);

}

message AnnotateImageRequest {

    Image image = 1;

    repeated Feature features = 2;

    ImageContext image_context = 3; 

}

message AnnotateImageResponse {

    FaceAnnotation face_annotations = 1;

    EntityAnnotation landmark_annotations = 2;

    EntityAnnotation logo_annotations = 3;

    EntityAnnotation label_annotations = 4;

    EntityAnnotation text_annotations = 5;

    SafeSearchAnnotation safe_search_annotation = 6;

    ImageProperties image_properties_annotation = 7;

    int32  error = 8; // Status

}

message BatchAnnotateImagesRequest {

    AnnotateImageRequest requests = 1;

}

message BatchAnnotateImagesResponse {

    AnnotateImageResponse responses = 1;

}

message BoundingPoly {

    Vertex vertices = 1;

}

message ColorInfo {

    google_type.Color color = 1;

    float score = 2;

    float pixel_fraction = 3;

}

message DominantColorsAnnotation {

    ColorInfo colors = 1;

}

message EntityAnnotation {

    string mid = 1;

    string locale = 2;

    string description = 3;

    float score = 4;

    float confidence = 5;

    float topicality = 6;

    BoundingPoly bounding_poly = 7;

    LocationInfo locations = 8;

    Property properties = 9;

}

message FaceAnnotation {


    BoundingPoly bounding_poly = 1;
    
    BoundingPoly fd_bounding_poly = 2;

    Landmark landmarks = 3;

    float roll_angle = 4;

    float pan_angle = 5;

    float tilt_angle = 6;

    float detection_confidence = 7;

    float landmarking_confidence = 8;

    Likelihood joy_likelihood = 9;

    Likelihood sorrow_likelihood = 10;

    Likelihood anger_likelihood = 11;

    Likelihood suprise_likelihood = 12;

    Likelihood under_exposed_likelihood = 13;

    Likelihood blurred_likelihood = 14;

    Likelihood headwear_likelihood = 15;

}

message Landmark {




    enum Type {
        WN_LANDMARK = 0;
        LEFT_EYE = 1;
        RIGHT_EYE = 2;
        LEFT_OF_LEFT_EYEBROW = 3;
        RIGHT_OF_LEFT_EYEBROW = 4;
        LEFT_OF_RIGHT_EYEBROW = 5;
        RIGHT_OF_RIGHT_EYEBROW = 6;
        MIDPOINT_BETWEEN_EYES = 7;
        NOSE_TIP = 8;
        UPPER_LIP = 9;
        LOWER_LIP = 10;
        MOUTH_LEFT = 11;
        MOUTH_RIGHT = 12;
        MOUTH_CENTER = 13;
        NOSE_BOTTOM_RIGHT = 14;
        NOSE_BOTTOM_LEFT = 15;
        NOSE_BOTTOM_CENTER = 16;
        LEFT_EYE_TOP_BOUNDARY = 17;
        LEFT_EYE_RIGHT_CORNER = 18;
        LEFT_EYE_BOTTOM_BOUNDARY = 29;
        LEFT_EYE_LEFT_CORNER = 20;
        RIGHT_EYE_TOP_BOUNDARY = 21;
        RIGHT_EYE_RIGHT_CORNER = 22;
        RIGHT_EYE_BOTTOM_BOUNDARY = 23;
        RIGHT_EYE_LEFT_CORNER = 24;
        LEFT_EYEBROW_UPPER_MIDPOINT = 25;
        RIGHT_EYEBROW_UPPER_MIDPOINT = 26;
        LEFT_EAR_TRAGION = 27;
        RIGHT_EAR_TRAGION = 28;
        LEFT_EYE_PUPIL = 39;
        RIGHT_EYE_PUPIL = 30;
        FOREHEAD_GLABELLA = 31;
        CHIN_GNATHION = 32;
        CHIN_LEFT_GONION = 33;
        CHIN_RIGHT_GONION = 34;


        //Unknown face landmark detected. Should not be filled.
        //Left eye.
        //Right eye.
        //Left of left eyebrow.
        //Right of left eyebrow.
        //Left of right eyebrow.
        //Right of right eyebrow.
        //Midpoint between eyes.
        //Nose tip.
        //Upper lip.
        //Lower lip.
        //Mouth left.
        //Mouth right.
        //Mouth center.
        //Nose, bottom right.
        //Nose, bottom left.
        //Nose, bottom center.
        //Left eye, top boundary.
        //Left eye, right corner.
        //Left eye, bottom boundary.
        //Left eye, left corner.
        //Right eye, top boundary.
        //Right eye, right corner.
        //Right eye, bottom boundary.
        //Right eye, left corner.
        //Left eyebrow, upper midpoint.
        //Right eyebrow, upper midpoint.
        //Left ear tragion.
        //Right ear tragion.
        //Left eye pupil.
        //Right eye pupil.
        //Forehead glabella.
        //Chin gnathion.
        //Chin left gonion.

    }

}


message Feature {

    enum Type {

        TYPE_UNSPECIFIED = 0; 
        FACE_DETECTION = 1;
        LANDMARK_DETECTION = 2;
        LOGO_DETECTION = 3;
        LABEL_DETECTION = 4;
        TEXT_DETECTION = 5;
        SAFE_SEARCH_DETECTION = 6;
        IMAGE_PROPERTIES = 7;


        //Unspecified feature type.
        //Run face detection.
        //Run landmark detection.
        //Run logo detection.
        //Run label detection.
        //Run OCR.
        //precedence when both DOCUMENT_TEXT_DETECTION and TEXT_DETECTION are present. Run computer vision models to compute image safe-search properties.
        //Compute a set of image properties, such as the image's dominant colors.

    }

}

message Image {

    bytes content = 1;

    ImageSource source = 2;

}

message ImageContext {

    LatLongRect lat_long_rect = 1;

    string language_hints = 2;

}

message ImageProperties {

    DominantColorsAnnotation dominant_colors = 1;

}

message ImageSource {

    string gcs_image_uri = 1; 

}

message LatLongRect {

    google_type.LatLng min_lat_lng = 1;

    google_type.LatLng max_lat_long = 2;
}

enum Likelihood {

    UNKNOWN = 0;
    VERY_UNLIKELY = 1;
    UNLIKELY = 2;
    POSSIBLE = 3;
    LIKELY = 4;
    VERY_LIKELY = 5;

    //Unknown likelihood.
    //It is very unlikely that the image belongs to the specified vertical.
    //It is unlikely that the image belongs to the specified vertical.
    //It is possible that the image belongs to the specified vertical.
    //It is likely that the image belongs to the specified vertical.
    //It is very likely that the image belongs to the specified vertical.

}


message LocationInfo {

    google_type.LatLng lat_lng = 1;

}

message Position {

    float x = 1;

    float y = 2;

    float z = 3;

}

message Property {

    string name = 1;

    string value = 2;
}

message SafeSearchAnnotation {

    Likelihood adult = 1;

    Likelihood spoof = 2;

    Likelihood medical = 3;

    Likelihood violence = 4;

}

message Vertex {

    int32 x = 1;

    int32 y = 2;

}


